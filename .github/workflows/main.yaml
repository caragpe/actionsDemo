name: trigger
on:
  workflow_dispatch: {}
  push:
    branches:
      - test-workflow
jobs:
  deploy:
    runs-on: ['linux']
    steps:
      - name: Deploy
        run: |
          echo test
  tests_fail:
    outputs:
      tests_output: ${{ steps.set_output.outputs.tests_output }}
    runs-on: ['linux']
    needs:
      - deploy
    steps:
      - name: Tests
        id: tests
        run: |
          echo 'This test is going to fail'
          exit 1
      - name: Set output
        id: set_output
        if: always()
        run: |
          echo "tests_output=${{ steps.tests.outcome }}" >> $GITHUB_OUTPUT
  manual_1:
    outputs:
      manual_output: ${{ steps.set_output.outputs.manual_output }}
    runs-on: ['linux']
    needs:
      - tests_fail
    if: failure()
    steps:
      - name: manual
        run: |
          echo test
      - name: Set output
        id: set_output
        if: always()
        run: |
          echo "manual_output=failure" >> $GITHUB_OUTPUT
  ssm_if_failing_tests:
    if: ${{ always() && needs.manual_1.outputs.manual_output != 'failure' }}
    runs-on: ['linux']
    needs:
      - manual_1
      - tests_fail
    steps:
      - name: ssm
        run: |
          echo test
          echo Result is ${{ needs.manual_1.outputs.manual_output }}

  test_success:
    outputs:
      tests_output: ${{ steps.set_output.outputs.tests_output }}
    runs-on: ['linux']
    needs:
      - deploy
    steps:
      - name: Tests
        id: tests
        run: |
          echo 'This test is going to pass'
          exit 0
      - name: Set output
        id: set_output
        if: always()
        run: |
          echo "tests_output=${{ steps.tests.outcome }}" >> $GITHUB_OUTPUT
  manual_2:
    outputs:
      manual_output: ${{ steps.set_output.outputs.manual_output }}
    runs-on: ['linux']
    needs:
      - test_success
    if: failure()
    steps:
      - name: manual
        run: |
          echo test
      - name: Set output
        id: set_output
        if: always()
        run: |
          echo "manual_output=failure" >> $GITHUB_OUTPUT
  ssm_if_success_tests:
    if: ${{ always() && needs.manual_2.outputs.manual_output != 'failure' }}
    runs-on: ['linux']
    needs:
      - manual_2
      - test_success
    steps:
      - name: ssm
        run: |
          echo test
          echo Result is ${{ needs.manual_2.outputs.manual_output }}

test_success:
  outputs:
    tests_output: ${{ steps.set_output.outputs.tests_output }}
  runs-on: ['linux']
  needs:
    - deploy
  steps:
    - name: Tests
      id: tests
      run: |
        echo 'This test is going to pass'
        exit 0
    - name: Set output
      id: set_output
      if: always()
      run: |
        echo "tests_output=${{ steps.tests.outcome }}" >> $GITHUB_OUTPUT
  manual_2:
    outputs:
      manual_output: ${{ steps.set_output.outputs.manual_output }}
    runs-on: ['linux']
    needs:
      - test_success
    if: failure()
    steps:
      - name: manual
        run: |
          echo test
      - name: Set output
        id: set_output
        if: always()
        run: |
          echo "manual_output=failure" >> $GITHUB_OUTPUT
  ssm_if_skippedtests:
    if: ${{ always() && needs.manual_3.outputs.manual_output != 'failure' }}
    runs-on: ['linux']
    needs:
      - manual_3
      - test_success
    steps:
      - name: ssm
        run: |
          echo test
          echo Result is ${{ needs.manual_3.outputs.manual_output }}
#  tests_success:
#    outputs:
#      status: $${{ steps.set_output.outputs.status }}
#    runs-on: ['linux']
#    needs:
#      - deploy
#    steps:
#      - name: Tests
#        id: tests
#        run: |
#          echo 'This test is going to succeed'
#          exit 0
#      - name: Set output
#        id: set_output
#        if: always()
#        run: |
#          echo "status=$${{ steps.tests.outcome }}" >> $GITHUB_OUTPUT
#  manual_2:
#    runs-on: ['linux']
#    if: needs.tests_success.outputs.status == 'failure'
#    outputs:
#      status: ${{ steps.manual.outputs.output }}
#    needs:
#      - tests_success
#    steps:
#      - name: manual
#        run: |
#          echo test
#          echo "status='ok'" >> $GITHUB_OUTPUT
#  ssm_if_ok_tests:
#    if: $${{ always() && needs.manual_2.outputs.status != 'failure' }}
#    runs-on: ['linux']
#    needs:
#      - manual_2
#      - tests_success
#    steps:
#      - name: ssm
#        run: |
#          echo test
#          echo Result is $${{ needs.manual_2.outputs.status }}
#  tests_skipped:
#    outputs:
#      status: skipped
#    runs-on: ['linux']
#    needs:
#      - deploy
#    if: ${{ 1 == 0 }}
#    steps:
#      - name: Tests
#        run: |
#          echo success
#  manual_3:
#    runs-on: ['linux']
#    if: needs.tests_skipped.status == 'fail'
#    outputs:
#      status: force
#    needs:
#      - tests_skipped
#    steps:
#      - name: manual
#        run: |
#          echo test
#  ssm_if_skipped_tests:
#    if: $${{ always() && needs.tests_skipped.result != 'failure' }}
#    runs-on: ['linux']
#    needs:
#      - manual_3
#      - tests_skipped
#    steps:
#      - name: ssm
#        run: |
#          echo test
#          echo Result is $${{ needs.tests_skipped.result }}